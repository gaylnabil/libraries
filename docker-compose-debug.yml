  services:
    # FastAPI service
    library_fastapi:
      image: library_fastapi_img
      container_name: library_fastapi_c
      build:
        context: Backend/.
        dockerfile: Dockerfile
      volumes:
      - ./Backend:/Backend
      ports:
        - "${FASTAPI_PORT}:${FASTAPI_PORT}"
        - "5678:5678"

      # command: uvicorn api:app --reload --host 0.0.0.0 --port 8000
      command: >
        sh -c "echo '‚è≥ Waiting for debugger attach on 0.0.0.0:5678...';
               python -m debugpy --listen ${FASTAPI_HOST}:5678 --wait-for-client -m uvicorn api:app --reload --host ${FASTAPI_HOST} --port ${FASTAPI_PORT}"
      depends_on:
        - mongodb_database
      environment:
        - DEBUG=${DEBUG_MODE}
        - PYDEVD_DISABLE_FILE_VALIDATION=1
        - -Xfrozen_modules=off


    # MongoDB service
    mongodb_database:
      image: mongo
      restart: always
      container_name: mongodb_c
      volumes:
          - ./mongodb:/database
      ports:
          - "${MONGO_PORT}:${MONGO_PORT}"
      environment:
        # MONGO_INITDB_DATABASE: library
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}

    
    # Zookeeper and Kafka services for Kafka and Zookeeper
    zookeeper:
      image: confluentinc/cp-zookeeper:latest
      container_name: zookeeper_c
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      ports:
        - "2181:2181"
      networks:
        - kafka-network

    # kafka service
    kafka:
      image: confluentinc/cp-kafka:latest
      container_name: kafka_c
      # hostname: kafka
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
        - "29092:29092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_HOST}:${KAFKA_PORT},PLAINTEXT_HOST://${KAFKA_HOST}:${KAFKA_PORT_2}
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        # KAFKA_LISTENERS: PLAINTEXT://kafka1:29092,CONTROLLER://kafka1:29093,PLAINTEXT_HOST://0.0.0.0:9092
      networks:
        - kafka-network

    # kafka-ui service
    kafka-ui:
      container_name: kafka-ui
      image: provectuslabs/kafka-ui:latest
      ports:
        - "${KAFKA_UI_PORT}:${KAFKA_UI_PORT}"
      environment:
        DYNAMIC_CONFIG_ENABLED: true
        KAFKA_CLUSTERS__DEFAULT__KAFKA: ${KAFKA_HOST}:${KAFKA_PORT_2}
        # KAFKA_CLUSTERS__DEFAULT__KAFKA: localhost:29092
        KAFKA_CLUSTERS__DEFAULT__ZOOKEEPER: zookeeper:2181
      depends_on:
        - kafka
      networks:
        - kafka-network

  networks:
    kafka-network:
      # name: kafka-network
      driver: bridge